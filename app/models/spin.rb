class Spin < ActiveRecord::Base
  attr_accessible :content, :in_reply_to
  belongs_to :user
  has_many :comments, dependent: :destroy
  validates :content, presence: true, length: { maximum: 140 }
  validates :user_id, presence: true

  default_scope order('created_at DESC')

  def self.from_users_followed_by_and_replies(user)
    followed_user_ids = user.followed_user_ids  #followed_user_ids  is generated by - has_many :followed_users relationship in User model
    where("user_id IN (?) OR user_id = ? OR in_reply_to = ?", followed_user_ids, user, user.username)  #user stands for user.id (rails convention) 
  end


 # def self.including_replies(user)
 # 	where("OR in_reply_to = ?", user.username) 
 # end

 #  def self.including_replies(user)
 #	followed_user_ids = user.followed_user_ids 
 # 	where("user_id IN (?) OR in_reply_to = ? OR user_id = ?", followed_user_ids, user.username, user) 
 # end

  # Or similar
  #scope :including_replies, lambda { |user| where(:in_reply_to => user.username) }

end
